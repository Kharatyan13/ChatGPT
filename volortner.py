import harcer_python
import harcer_mathem
import harcer_patm
import harcer_fizika
import harcer_grak
import harcer_sport
import harcer_hayoc_lezu
import harcer_angl
#python
def zangvac():
    print("‘∂’°’∂’£’æ’°’Æ’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’¶’°’∂’£’æ’°’Æ’® \n2.‘ª’û’∂’π ’ß list \n3.‘ª’û’∂’π ’ß set \n4.‘ª’û’∂’π ’ß tuple \n5.‘ª’û’∂’π ’ß dict")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’¶’°’∂’£’æ’°’Æ" in harc:
        harcer_python.zangvac1()
    elif "list" in harc or "’¨’´’Ω’ø" in harc:
        harcer_python.list1()
    elif "set" in harc or "’Ω’•’©" in harc:
        harcer_python.set1()
    elif "tuple" in harc or "’©’°’∫’¨" in harc:
        harcer_python.tuple1()
    elif "dict" in harc or "dictionary" in harc or "’§’´÷Ñ’ø" in harc or "’§’´÷Ñ’∑’∂’º’´" in harc:
        harcer_python.dect1()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        zangvac()
def pajman():
    print("’ä’°’µ’¥’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’∫’°’µ’¥’°’∂’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’∫’°’µ’¥’°’∂’´ ÷Ö’∫’•÷Ä’°’ø’∏÷Ä’∂’•÷Ä’® \n3.‘ª’û’∂’π ’•’∂ if,elif ÷á else")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’∫’°’µ’¥’°’∂" in harc:
        harcer_python.payman1()
    elif "÷Ö’∫’•÷Ä’°’ø’∏÷Ä" in harc:
        harcer_python.payman_operator()
    elif "if" in harc or "elif" in harc or "else" in harc:
        harcer_python.if_elif_else()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        pajman()

def cikl():
    print("’ë’´’Ø’¨’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ÷Å’´’Ø’¨’® \n2.‘ª’û’∂’π ’ß for \n3.‘ª’û’∂’π ’ß while \n4.‘ª’û’∂’π ’ß foreach")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "÷Å’´’Ø’¨" in harc:
        harcer_python.cikl1()
    elif ("for" in harc or "÷Ü’∏’º" in harc) and "each" not in harc:
        harcer_python.for1()
    elif "while" in harc or "’æ’°’µ’¨" in harc:
        harcer_python.while1()
    elif "foreach" in harc or "÷Ü’∏’º’´’π" in harc:
        harcer_python.foreach1()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        cikl()

def mathm():
    print("math ’¥’∏’§’∏÷Ç’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß math ’¥’∏’§’∏÷Ç’¨’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ math ’¥’∏’§’∏÷Ç’¨’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if ("math" in harc or "’¥’°’©" in harc) and "÷Ü" not in harc:
        harcer_python.math1()
    elif ("math" in harc or "’¥’°’©" in harc) and "÷Ü" in harc:
        harcer_python.math_funk()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        mathm()

def strg():
    print("’è’∏’≤’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’ø’∏’≤’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’ø’∏’≤’•÷Ä’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’® ÷á ’¥’•’©’∏’§’∂’•÷Ä’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’ø’∏’≤" in harc and "÷Ü" not in harc:
        harcer_python.tox1()
    elif "’ø’∏’≤" in harc and "÷Ü" in harc:
        harcer_python.metod_funk()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        strg()

#mathem
def hart():
    print("’Ä’°÷Ä’©’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’Ω’•’≤’°’∂’® \n2.‘ª’û’∂’π ’ß ’•’º’°’∂’Ø’µ’∏÷Ç’∂’® \n3.‘ª’û’∂’π ’ß ’¶’∏÷Ç’£’°’∞’•’º’°’£’´’Æ’® \n4.‘ª’û’∂’π ’ß ’∑’•’≤’°’∂’Ø’µ’∏÷Ç’∂’® \n5.‘ª’û’∂’π ’ß ’∏÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’Ω’•’≤’°’∂" in harc:
        harcer_mathem.sexan()
    elif "’•’º’°’∂" in harc:
        harcer_mathem.er()
    elif "’¶’∏÷Ç’£’°’∞’•’º" in harc:
        harcer_mathem.zugaher()
    elif "’∑’•’≤’°’∂" in harc:
        harcer_mathem.shex()
    elif "’∏÷Ç’≤’≤’°’∂" in harc:
        harcer_mathem.uxx()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        hart()

def tarac():
    print("’è’°÷Ä’°’Æ’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’¢’∏÷Ç÷Ä’£’® \n2.‘ª’û’∂’π ’ß ’£’∏÷Ç’∂’§’® \n3.‘ª’û’∂’π ’ß ’£’¨’°’∂’® \n4.‘ª’û’∂’π ’ß ’Ø’∏’∂’® \n5.‘ª’û’∂’π ’ß ’∏÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’°’∂’´’Ω’ø’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’¢’∏÷Ç÷Ä’£" in harc:
        harcer_mathem.burg()
    elif "’£’∏÷Ç’∂’§" in harc or "’£’∂’§" in harc:
        harcer_mathem.gund()
    elif "’£’¨’°’∂" in harc:
        harcer_mathem.glan()
    elif "’Ø’∏’∂" in harc:
        harcer_mathem.kon()
    elif "’∏÷Ç’≤’≤" in harc:
        harcer_mathem.uxx_nist()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        tarac()


def trigon():
    print("’è÷Ä’´’£’∏’∂’∏’¥’•’ø÷Ä’´’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù 1.‘ª’û’∂’π ’ß ’Ø’∏’Ω’´’∂’∏÷Ç’Ω’® 2.‘ª’û’∂’π ’ß ’Ω’´’∂’∏÷Ç’Ω’® 3.‘ª’û’∂’π ’ß ’ø’°’∂’£’•’Ω’® 4.‘ª’û’∂’π ’ß ’Ø’∏’ø’°’∂’£’•’Ω’® 5.‘ª’û’∂’π ’•’∂ ’°÷Ä’Ø’•÷Ä’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’Ø’∏’Ω" in harc:
        harcer_mathem.cos()
    elif "’Ω’´’∂" in harc:
        harcer_mathem.sin()
    elif "’ø’°’∂" in harc and "’Ø’∏" not in harc:
        harcer_mathem.tg()
    elif "’Ø’∏’ø" in harc:
        harcer_mathem.ctg()
    elif "’°÷Ä’Ø" in harc or "’°’º’Ø" in harc:
        harcer_mathem.arc()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        trigon()


def hanr():
    print("’Ä’°’∂÷Ä’°’∞’°’∑’æ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ø’•’Ω’°’Ø’´ ’©’æ’•÷Ä ’Ø’°’∂ \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.‘ª’û’∂’π ’ß ’Ø’∏’ø’∏÷Ä’°’Ø’® \n4.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’Ø÷Ä’≥’°’ø ’¢’°’¶’¥’°’∫’°’ø’Ø’¥’°’∂ ’¢’°’∂’°’±÷á’•÷Ä’® \n5.‘ª’û’∂’π ’ß ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂ ’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’ø’•’Ω’°’Ø" in harc:
        harcer_mathem.tver_tesak()
    elif "’£’∏÷Ä’Æ’∏’≤" in harc:
        harcer_mathem.gorc1()
    elif "’Ø’∏’ø’∏÷Ä" in harc:
        harcer_mathem.kotorak()
    elif "’Ø÷Ä’≥’°’ø" in harc:
        harcer_mathem.krcat_bazm()
    elif "÷Ñ’°’º’°" in harc:
        harcer_mathem.qarakusayin()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        hanr()


def teorem():
    print("’Ñ’°’©’•’¥’°’ø’´’Ø’°’Ø’°’∂ ’©’•’∏÷Ä’•’¥’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù 1.’à’û÷Ä’∂ ’ß ’ä’µ’∏÷Ç’©’°’£’∏÷Ä’°’Ω’´ ’©’•’∏÷Ä’•’¥’® 2.’à’û÷Ä’∂ ’ß ‘π’°’¨’•’Ω’´ ’©’•’∏÷Ä’•’¥’® 3.’à’û÷Ä’∂ ’ß ‘≤’•’¶’∏÷Ç’´ ’©’•’∏÷Ä’•’¥’® 4.’à’û÷Ä’∂ ’ß ’ç’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’® 5.’à’û÷Ä’∂ ’ß ‘ø’∏’Ω’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’®")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "’∫’µ’∏÷Ç" in harc:
        harcer_mathem.pyut()
    elif "’©’°’¨" in harc:
        harcer_mathem.tales()
    elif "’¢’•’¶" in harc:
        harcer_mathem.bezu()
    elif "’Ω’´’∂" in harc and "’Ø’∏" not in harc:
        harcer_mathem.sin_teo()
    elif "’Ø’∏’Ω’´’∂" in harc:
        harcer_mathem.cos_teo()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        teorem()

#patm
def art():

def arsh():

def bagr():

def rubin():

def arajin():

def erkrord():

def errord():

#fizika
def astgh():

def fizi():

#angl
def present():

def past():

def future():

#sport
def foot():

def basket():

def valley():

def f1():

def olymp():

#hayoc lezu
def jam():

def exanak():

def xosq():

def lezup():

#grak
def tum():

def abov():

def mash():

def nar():

def sn():
