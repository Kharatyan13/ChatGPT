#Python, mathem, patmutyun, fizika, angl, sport
import volortner
def python():
    print("ีีกีตีฟีธีถ ีกีผีกึีฏีกีตีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ีฆีกีถีฃีพีกีฎีถีฅึ \n2.ีบีกีตีดีกีถีถีฅึ \n3.ึีซีฏีฌีฅึ \n4.ีดีกีฉีฅีดีกีฟีซีฏีกีฏีกีถ ีฃีธึีฎีธีฒีธึีฉีตีธึีถีถีฅึ \n5.ีฟีธีฒีฅึ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีฆีกีถีฃีพีกีฎีถีฅึ":
        volortner.zangvac()
    elif volort == "ีบีกีตีดีกีถีถีฅึ":
        volortner.pajman()
    elif volort == "ึีซีฏีฌีฅึ":
        volortner.cikl()
    elif volort == "ีดีกีฉีฅีดีกีฟีซีฏีกีฏีกีถ ีฃีธึีฎีธีฒีธึีฉีตีธึีถีถีฅึ":
        volortner.mathm()
    elif volort == "ีฟีธีฒีฅึ":
        volortner.strg()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        python()

def mathem():
    print("ีีกีฉีฅีดีกีฟีซีฏีกีตีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ีฐีกึีฉีกีนีกึีธึีฉีตีธึีถ \n2.ีฟีกึีกีฎีกีนีกึีธึีฉีตีธึีถ \n3.ีฟึีซีฃีธีถีธีดีฅีฟึีซีก \n4.ีฐีกีถึีกีฐีกีทีซีพ \n5.ีฉีฅีธึีฅีดีถีฅึ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีฐีกึีฉีกีนีกึีธึีฉีตีธึีถ":
        volortner.hart()
    elif volort == "ีฟีกึีกีฎีกีนีกึีธึีฉีตีธึีถ":
        volortner.tarac()
    elif volort == "ีฟึีซีฃีธีถีธีดีฅีฟึีซีก":
        volortner.trigon()
    elif volort == "ีฐีกีถึีกีฐีกีทีซีพ":
        volortner.hanr()
    elif volort == "ีฉีฅีธึีฅีดีถีฅึ":
        volortner.teorem()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        mathem()

def patm():
    print("ีีกีตีธึ ีบีกีฟีดีธึีฉีตีกีถ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ิฑึีฟีกีทีฅีฝีตีกีถีถีฅึ \n2.ิฑึีทีกีฏีธึีถีซีถีฅึ \n3.ิฒีกีฃึีกีฟีธึีถีซีถีฅึ \n4.ีีธึีขีซีถีตีกีถีถีฅึ \n5.ิฑีผีกีปีซีถ ีีกีถึีกีบีฅีฟีธึีฉีตีธึีถ \n6.ิตึีฏึีธึีค ีีกีถึีกีบีฅีฟีธึีฉีตีธึีถ \n7.ิตึึีธึีค ีีกีถึีกีบีฅีฟีธึีฉีตีธึีถ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีกึีฟีกีทีฅีฝีตีกีถีถีฅึ":
        volortner.art()
    elif volort == "ีกึีทีกีฏีธึีถีซีถีฅึ":
        volortner.arsh()
    elif volort == "ีขีกีฃึีกีฟีธึีถีซีถีฅึ":
        volortner.bagr()
    elif volort == "ีผีธึีขีซีถีตีกีถีถีฅึ":
        volortner.rubin()
    elif volort == "ีกีผีกีปีซีถ ีฐีกีถึีกีบีฅีฟีธึีฉีตีธึีถ":
        volortner.arajin()
    elif volort == "ีฅึีฏึีธึีค ีฐีกีถึีกีบีฅีฟีธึีฉีตีธึีถ":
        volortner.erkrord()
    elif volort == "ีฅึึีธึีค ีฐีกีถึีกีบีฅีฟีธึีฉีตีธึีถ":
        volortner.errord()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        patm()

def fizika():
    print("ีีซีฆีซีฏีกีตีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ีกีฝีฟีฒีกีฃีซีฟีธึีฉีตีธึีถ \n2.ึีซีฆีซีฏีก")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีกีฝีฟีฒีกีฃีซีฟีธึีฉีตีธึีถ":
        volortner.astgh()
    elif volort == "ึีซีฆีซีฏีก":
        volortner.fizi()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        fizika()

def angl():
    print("ิฑีถีฃีฌีฅึีฅีถีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ีถีฅึีฏีก \n2.ีกีถึีตีกีฌ \n3.ีกีบีกีผีถีซ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีถีฅึีฏีก":
        volortner.present()
    elif volort == "ีกีถึีตีกีฌ":
        volortner.past()
    elif volort == "ีกีบีกีผีถีซ":
        volortner.future()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        angl()

def sport():
    print("ีีบีธึีฟีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ึีธึีฟีขีธีฌ \n2.ีขีกีฝีฏีฅีฟีขีธีฌ \n3.ีพีธีฌีฅีตีขีธีฌ \n4.ึีธึีดีธึีฌีก 1 \n5.ึีฌีซีดีบีซีกีฏีกีถ ีญีกีฒีฅึ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ึีธึีฟีขีธีฌ":
        volortner.foot()
    elif volort == "ีขีกีฝีฏีฅีฟีขีธีฌ":
        volortner.basket()
    elif volort == "ีพีธีฌีฅีตีขีธีฌ":
        volortner.valley()
    elif volort == "ึีธีฌีดีธึีฌีก 1":
        volortner.f1()
    elif volort == "ึีฌีซีดีบีซีกีฏีกีถ ีญีกีฒีฅึ":
        volortner.olymp()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        sport()

def lezu():
    print("ีีกีตีธึ ีฌีฅีฆีพีซ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ีชีกีดีกีถีกีฏ \n2.ีฅีฒีกีถีกีฏ \n3.ีญีธีฝึีซ ีดีกีฝีฅึ \n4.ีฐีกีตีธึ ีฌีฅีฆีพีซ ีบีกีฟีดีธึีฉีตีธึีถ")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีชีกีดีกีถีกีฏ":
        volortner.jam()
    elif volort == "ีฅีฒีกีถีกีฏ":
        volortner.exanak()
    elif volort == "ีญีธีฝึีซ ีดีกีฝีฅึ":
        volortner.xosq()
    elif volort == "ีฐีกีตีธึ ีฌีฅีฆีพีซ ีบีกีฟีดีธึีฉีตีธึีถ":
        volortner.lezup()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        lezu()


def grak():
    print("ีีกีต ีฃึีกีฏีกีถีธึีฉีตีกีถ ีธีฌีธึีฟีถีฅึีถ ีฅีถี \n1.ินีธึีดีกีถีตีกีถ \n2.ิฑีขีธีพีตีกีถ \n3.ีีกีทีฟีธึ \n4.ีีกึีฅีฏีกึีซ \n5.ีีกีตีกีฉ-ีีธีพีก")
    volort = input("ิณึีฅึ, ีฉีฅ ีซีถีน ีธีฌีธึีฟีซึ ีฐีกึึีฅึ ีธึีถีฅึ = ")
    volort.lower()
    if volort == "ีฉีธึีดีกีถีตีกีถ":
        volortner.tum()
    elif volort == "ีกีขีธีพีตีกีถ":
        volortner.abov()
    elif volort == "ีดีกีทีฟีธึ":
        volortner.mash()
    elif volort == "ีถีกึีฅีฏีกึีซ":
        volortner.nar()
    elif "ีฝีกีตีกีฉ" in volort:
        volortner.sn()
    else:
        print("ิฟีถีฅึีฅึ, ีขีกีตึ ีธีฌีธึีฟีซ ีดีกีฝีซีถ ีซีถึีธึีดีกึีซีก ีนีธึีถีฅีด๐ \nิธีถีฟึีฅึ ีฟึีพีกีฎ ีธีฌีธึีฟีถีฅึีซึ ีดีฅีฏีจ:")
        grak()
