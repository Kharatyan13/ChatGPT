import python
import mathematics
import history
import physics
import literature
import sports
import armenian_language
import english
import diplomacy
import geography
import time
#python
def slow_print(text):
    for char in text:
        print(char, end="", flush=True)
        time.sleep(0.01)

def array():
    slow_print("‘∂’°’∂’£’æ’°’Æ’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘∂’°’∂’£’æ’°’Æ’® \n2.list \n3.set \n4.tuple \n5.dict\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’¶’°’∂’£’æ’°’Æ" in question:
        python.array1()
    elif "list" in question or "’¨’´’Ω’ø" in question:
        python.list1()
    elif "set" in question or "’Ω’•’©" in question:
        python.set1()
    elif "tuple" in question or "’©’°’∫’¨" in question:
        python.tuple1()
    elif "dict" in question or "dictionary" in question or "’§’´÷Ñ’ø" in question or "’§’´÷Ñ’∑’∂’º’´" in question:
        python.dict1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        array()

def condition():
    slow_print("’ä’°’µ’¥’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’ä’°’µ’¥’°’∂’® \n2.’ä’°’µ’¥’°’∂’´ ÷Ö’∫’•÷Ä’°’ø’∏÷Ä’∂’•÷Ä’® \n3.if,elif ÷á else\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’∫’°’µ’¥’°’∂" in question:
        python.condition()
    elif "÷Ö’∫’•÷Ä’°’ø’∏÷Ä" in question:
        python.coditional_operator()
    elif "if" in question or "elif" in question or "else" in question:
        python.if_elif_else()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        condition()

def cycle():
    slow_print("’ë’´’Ø’¨’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’ë’´’Ø’¨’® \n2.for \n3.while\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "÷Å’´’Ø’¨" in question:
        python.cycle()
    elif ("for" in question or "÷Ü’∏’º" in question) and "each" not in question:
        python.for1()
    elif "while" in question or "’æ’°’µ’¨" in question:
        python.while1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        cycle()

def math():
    slow_print("math ’¥’∏’§’∏÷Ç’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.math ’¥’∏’§’∏÷Ç’¨’® \n2.math ’¥’∏’§’∏÷Ç’¨’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if ("math" in question or "’¥’°’©" in question) and "÷Ü" not in question:
        python.math1()
    elif ("math" in question or "’¥’°’©" in question) and "÷Ü" in question:
        python.math1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        math()

def strg():
    slow_print("’è’∏’≤’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’è’∏’≤’® \n2.’è’∏’≤’•÷Ä’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’® ÷á ’¥’•’©’∏’§’∂’•÷Ä’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’ø’∏’≤" in question and "÷Ü" not in question:
        python.strg1()
    elif ("’ø’∏’≤" in question and "÷Ü’∏÷Ç’∂’Ø" in question) or ("’ø’∏’≤" in question and "’¥’•’©" in question):
        python.strg1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        strg()


#mathem
def flat():
    slow_print("’Ä’°÷Ä’©’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’ç’•’≤’°’∂’® \n2.‘µ’º’°’∂’Ø’µ’∏÷Ç’∂’® \n3.‘∂’∏÷Ç’£’°’∞’•’º’°’£’´’Æ’® \n4.’á’•’≤’°’∂’Ø’µ’∏÷Ç’∂’® \n5.’à÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’•’≤’°’∂" in question:
        mathematics.trapezoid()
    elif "’•’º’°’∂" in question:
        mathematics.triangle()
    elif "’¶’∏÷Ç’£’°’∞’•’º" in question:
        mathematics.parallelogram()
    elif "’∑’•’≤’°’∂" in question:
        mathematics.rhombus()
    elif "’∏÷Ç’≤’≤’°’∂" in question:
        mathematics.rectangle()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        flat()

def solid():
    slow_print("’è’°÷Ä’°’Æ’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘≤’∏÷Ç÷Ä’£’® \n2.‘≥’∏÷Ç’∂’§’® \n3.‘≥’¨’°’∂’® \n4.‘ø’∏’∂’® \n5.’à÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’°’∂’´’Ω’ø’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’¢’∏÷Ç÷Ä’£" in question:
        mathematics.pyramid()
    elif "’£’∏÷Ç’∂’§" in question or "’£’∂’§" in question:
        mathematics.ball()
    elif "’£’¨’°’∂" in question:
        mathematics.cylinder()
    elif "’Ø’∏’∂" in question:
        mathematics.cone()
    elif "’∏÷Ç’≤’≤" in question:
        mathematics.rectangular()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        solid()

def trigon():
    slow_print("’è÷Ä’´’£’∏’∂’∏’¥’•’ø÷Ä’´’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’∏’Ω’´’∂’∏÷Ç’Ω’® \n2.’ç’´’∂’∏÷Ç’Ω’® \n3.’è’°’∂’£’•’Ω’® \n4.‘ø’∏’ø’°’∂’£’•’Ω’® \n5.‘±÷Ä’Ø’•÷Ä’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’∏’Ω" in question:
        mathematics.cos()
    elif "’Ω’´’∂" in question:
        mathematics.sin()
    elif "’ø’°’∂" in question and "’Ø’∏" not in question:
        mathematics.tg()
    elif "’Ø’∏’ø" in question:
        mathematics.ctg()
    elif "’°÷Ä’Ø" in question or "’°’º’Ø" in question:
        mathematics.arc()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        trigon()

def algebra():
    slow_print("’Ä’°’∂÷Ä’°’∞’°’∑’æ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’æ’•÷Ä’´ ’ø’•’Ω’°’Ø’∂’•÷Ä \n2.‘π’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.‘ø’∏’ø’∏÷Ä’°’Ø’® \n4.‘ø÷Ä’≥’°’ø ’¢’°’¶’¥’°’∫’°’ø’Ø’¥’°’∂ ’¢’°’∂’°’±÷á’•÷Ä’® \n5.’î’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂ ’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’ø’•’Ω’°’Ø" in question:
        mathematics.types_of_numbers()
    elif "’£’∏÷Ä’Æ’∏’≤" in question:
        mathematics.operations()
    elif "’Ø’∏’ø’∏÷Ä" in question:
        mathematics.fraction()
    elif "’Ø÷Ä’≥’°’ø" in question:
        mathematics.multi_formulas()
    elif "÷Ñ’°’º’°" in question:
        mathematics.quadratic()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        algebra()

def theorem():
    slow_print("’Ñ’°’©’•’¥’°’ø’´’Ø’°’Ø’°’∂ ’©’•’∏÷Ä’•’¥’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’ä’µ’∏÷Ç’©’°’£’∏÷Ä’°’Ω’´ ’©’•’∏÷Ä’•’¥’® \n2.‘π’°’¨’•’Ω’´ ’©’•’∏÷Ä’•’¥’® \n3.‘≤’•’¶’∏÷Ç’´ ’©’•’∏÷Ä’•’¥’® \n4.’ç’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’® \n5.‘ø’∏’Ω’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’∫’µ’∏÷Ç" in question:
        mathematics.pyut()
    elif "’©’°’¨" in question:
        mathematics.tales()
    elif "’¢’•’¶" in question:
        mathematics.bezu()
    elif "’Ω’´’∂" in question and "’Ø’∏" not in question:
        mathematics.sin_teo()
    elif "’Ø’∏’Ω’´’∂" in question:
        mathematics.cos_teo()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        theorem()


#patm
def artashesyan():
    slow_print("‘±÷Ä’ø’°’∑’•’Ω’µ’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.‘±÷Ä’ø’°’∑’•’Ω’µ’°’∂’∂’•÷Ä’´ ’§’´÷Å’°÷Ä’°’∂’® \n5.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’°’∞’¥’°’∂’∂’•÷Ä’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.art_creation()
    elif "’æ’•÷Ä" in question:
        history.art_rise()
    elif "’°’∂’Ø" in question:
        history.art_collapse()
    elif "’§’´÷Å’°" in question:
        history.art_cathedral()
    elif "’Ω’°’∞" in question:
        history.art_area()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        artashesyan()

def arshakuni():
    slow_print("‘±÷Ä’∑’°’Ø’∏÷Ç’∂’´’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.¬´‘±÷Ä’∑’°’Ø ÷á ’á’°’∫’∏÷Ç’∞¬ª ’°’æ’°’∂’§’°’¶÷Ä’∏÷Ç’µ÷Å’® \n5.’î÷Ä’´’Ω’ø’∏’∂’•’∏÷Ç’©’µ’°’∂ ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.arsh_creation()
    elif "’æ’•÷Ä" in question:
        history.arsh_rise()
    elif "’°’∂’Ø" in question:
        history.arsh_collapse()
    elif "’∑’°’∫’∏÷Ç’∞" in question:
        history.arsh_shapuh()
    elif "÷Ñ÷Ä’´’Ω" in question:
        history.christianity()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        arshakuni()

def bagratuni():
    slow_print("‘≤’°’£÷Ä’°’ø’∏÷Ç’∂’´’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.’ç÷á’´ ’≥’°’Ø’°’ø’°’¥’°÷Ä’ø’® \n5.’Ñ’°’∂’°’¶’Ø’•÷Ä’ø’´ ’≥’°’Ø’°’ø’°’¥’°÷Ä’ø’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.bagr_creation()
    elif "’æ’•÷Ä" in question:
        history.bagr_rise()
    elif "’°’∂’Ø" in question:
        history.bagr_collapse()
    elif "’Ω÷á’°’∂" in question:
        history.sevan()
    elif "’¥’°’∂’°’¶" in question:
        history.manazkert()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        bagratuni()

def rubinyan():
    slow_print("’å’∏÷Ç’¢’´’∂’µ’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’´’¨’´’Ø’´’°’µ’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘ø’´’¨’´’Ø’´’°’µ’´ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘ø’´’¨’´’Ø’´’°’µ’´ ’°’∂’Ø’∏÷Ç’¥’® \n4.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥ \n5.‘±’Ø’ø’´’æ ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.rub_creation()
    elif "’æ’•÷Ä" in question:
        history.rub_rise()
    elif "’°’∂’Ø" in question:
        history.rub_collapse()
    elif "’©’°’£" in question:
        history.rub_kingdom()
    elif "’§’´’æ’°" in question:
        history.rub_diplomacy()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        rubinyan()

def first():
    slow_print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘±’º’°’ª’´’∂ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ñ’°’µ’´’Ω’µ’°’∂ ’∞’•÷Ä’∏’Ω’°’¥’°÷Ä’ø’•÷Ä’® \n2.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n3.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥ \n4.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’≠’∏÷Ä’∞÷Ä’§’°’µ’∂’°÷Å’¥’°’∂ ’Ω’Ø’´’¶’¢’® \n5.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’¥’°’µ’´’Ω" in question:
        history.mayis()
    elif "’Ω’ø’•’≤" in question:
        history.creation1()
    elif "’°’∂’Ø" in question:
        history.collapse1()
    elif "’≠’∏" in question:
        history.communism()
    elif "’§’´’æ’°’∂" in question:
        history.diplomacy1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        first()

def second():
    slow_print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘Ω’∏÷Ä’∞÷Ä’§’°’µ’´’∂ ’ç’∏÷Å’´’°’¨’´’Ω’ø’°’Ø’°’∂ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ä‘Ω’ç’Ä-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.’Ä‘Ω’ç’Ä-’´ ’°’∂’Ø’∏÷Ç’¥’® \n3.’Ä’°’µ’•÷Ä’´ ’¥’°’Ω’∂’°’Ø÷Å’∏÷Ç’©’µ’∏÷Ç’∂’® ’Ä’°’µ÷Ä’•’∂’°’Ø’°’∂ ’∫’°’ø’•÷Ä’°’¶’¥’∏÷Ç’¥ \n4.’Ä‘Ω’ç’Ä-’´ ’£’´’ø’°’Ø’°’∂ ’°’º’°’ª’®’∂’©’°÷Å’® \n5.’ç’∏÷Ç’¥’£’°’µ’´’©’µ’°’∂ ’∏’≤’¢’•÷Ä’£’∏÷Ç’©’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.creation2()
    elif "’°’∂’Ø" in question:
        history.collapse2()
    elif "’∞’°’µ÷Ä’•’∂’°’Ø’°’∂" in question:
        history.patriotic()
    elif "’£’´’ø’°" in question:
        history.scientific()
    elif "’Ω’∏÷Ç’¥’£’°" in question:
        history.sumgayit()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        second()

def third():
    slow_print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘µ÷Ä÷Ä’∏÷Ä’§ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ä’Ä-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘±÷Ä÷Å’°’≠’µ’°’∂ ’°’º’°’ª’´’∂ ’∫’°’ø’•÷Ä’°’¶’¥’® \n3.‘±÷Ä÷Å’°’≠’µ’°’∂ ’•÷Ä’Ø÷Ä’∏÷Ä’§ ’∫’°’ø’•÷Ä’°’¶’¥’® \n4.‘π’°’æ’∑’µ’° ’∞’•’≤’°÷É’∏’≠’∏÷Ç’©’µ’∏÷Ç’∂’® \n5.’Ä’Ä-’´ ’∂’•÷Ä’Ø’°’µ’´’Ω ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.creation3()
    elif "’°’º’°’ª’´’∂" in question:
        history.arcax1()
    elif "’•÷Ä’Ø÷Ä’∏÷Ä’§" in question:
        history.arcax2()
    elif "’©’°’æ" in question:
        history.tavshya()
    elif "’§’´’æ’°’∂" in question:
        history.diplomacy3()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        third()

#fizika
def astro():
    slow_print("‘±’Ω’ø’≤’°’£’´’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘±÷Ä’•’£’°’Ø’∂’°’µ’´’∂ ’∞’°’¥’°’Ø’°÷Ä’£’® \n2.‘æ’´÷Ä ‘ø’°’©’´’∂ ’£’°’¨’°’Ø’ø’´’Ø’°’∂ \n3.‘ª’∂’π’∏’û÷Ç ’•’∂ ‘æ’´÷Ä ‘ø’°’©’´’∂’´’∂ ’°’µ’¨ ’Ø’•÷Ä’∫ ’°’∂’æ’°’∂’∏÷Ç’¥ ’Ä’°÷Ä’§’°’£’∏’≤’´ ’É’°’∂’°’∫’°÷Ä’∞ \n4.‘±’Ω’ø’≤’® \n5.’Ä’•’º’°’§’´’ø’°’Ø’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’°÷Ä’•’£’°’Ø" in question:
        physics.solar_system()
    elif "’Æ’´÷Ä" in question and "’∞’°÷Ä’§’°’£’∏’≤" not in question:
        physics.milky_way()
    elif "’∞’°÷Ä’§’°’£’∏’≤" in question:
        physics.hardagoxi()
    elif "’°’Ω’ø’≤" in question:
        physics.star()
    elif "’∞’•’º’°’§’´’ø" in question:
        physics.telescope()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        astro()

def physic():
    slow_print("’ñ’´’¶’´’Ø’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à÷Ç’™’® \n2.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’°’º’°’ª’´’∂ ÷Ö÷Ä’•’∂÷Ñ \n3.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’•÷Ä’Ø÷Ä’∏÷Ä’§ ÷Ö÷Ä’•’∂÷Ñ \n4.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’•÷Ä÷Ä’∏÷Ä’§ ÷Ö÷Ä’•’∂÷Ñ \n5.‘±’∑’≠’°’ø’°’∂÷Ñ’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’∏÷Ç’™" in question:
        physics.force()
    elif "’°’º’°’ª’´’∂" in question or "1-’´’∂" in question or "1’´’∂" in question:
        physics.nyut1()
    elif "’•÷Ä’Ø÷Ä’∏÷Ä’§" in question or "2-÷Ä’§" in question or "2÷Ä’§" in question:
        physics.nyut2()
    elif "’•÷Ä÷Ä’∏÷Ä’§" in question or "3-÷Ä’§" in question or "3÷Ä’§" in question:
        physics.nyut3()
    elif "’°’∑’≠’°’ø’°’∂" in question:
        physics.work()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        physic()

#angl
def present():
    slow_print("’Ü’•÷Ä’Ø’° ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.Present Simple \n2.Present Continuous \n3.Present Perfect \n4.Present Perfect Continuous\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "simple" in question:
        english.ps()
    elif "conti" in question and "perfect" not in question:
        english.pc()
    elif "perfect" in question and "conti" not in question:
        english.pp()
    elif "perfect" in question and "conti" in question:
        english.ppc()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        present()

def past():
    slow_print("‘±’∂÷Å’µ’°’¨ ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.Past Simple \n2.Past Continuous \n3.Past Perfect \n4.Past Perfect Continuous\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "simple" in question:
        english.pas()
    elif "conti" in question and "perfect" not in question:
        english.pac()
    elif "perfect" in question and "conti" not in question:
        english.pap()
    elif "perfect" in question and "conti" in question:
        english.papc()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        past()

def future():
    slow_print("‘±’∫’°’º’∂’´ ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.Future Simple \n2.Future Continuous \n3.Future Perfect \n4.Future Perfect Continuous\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "simple" in question:
        english.fs()
    elif "conti" in question and "perfect" not in question:
        english.fc()
    elif "perfect" in question and "conti" not in question:
        english.fp()
    elif "perfect" in question and "conti" in question:
        english.fpc()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        future()


#sport
def foot():
    slow_print("’ñ’∏÷Ç’ø’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’Ω’Ø’• ’£’∂’§’°’Ø’® \n2.’ñ‘ª’ñ‘± \n3.’à’í‘µ’ñ‘± \n4.’à’Ω’Ø’• ’≠’°’≤’°’Ø’∏’∑’´’Ø’® \n5.’Ä’°’µ’•÷Ä’® ÷Ü’∏÷Ç’ø’¢’∏’¨’∏÷Ç’¥\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’£’∂’§’°’Ø" in question:
        sports.ballondor()
    elif "÷Ü’´÷Ü’°" in question:
        sports.fifa()
    elif "’∏÷Ç’•÷Ü’°" in question:
        sports.uefa()
    elif "’Ø’∏’∑’´’Ø" in question:
        sports.goldenboot()
    elif "’∞’°’µ" in question:
        sports.armenian_foot()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        foot()

def basket():
    slow_print("‘≤’°’Ω’Ø’•’ø’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ü‘≤‘± \n2.’ñ‘ª‘≤‘± ’°’∑’≠’°÷Ä’∞’´ ’£’°’æ’°’© \n3.‘µ’æ÷Ä’∏‘º’´’£’° \n4.’Ä’°’µ’•÷Ä’® ’¢’°’Ω’Ø’•’ø’¢’∏’¨’∏÷Ç’¥\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’∂’¢’°" in question:
        sports.nba()
    elif "÷Ü’´’¢’°" in question:
        sports.fiba_wc()
    elif "’•’æ÷Ä’∏" in question:
        sports.euroligue()
    elif "’∞’°’µ" in question:
        sports.armenian_basket()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        basket()

def valley():
    slow_print("’é’∏’¨’•’µ’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù 1.’é’∏’¨’•’µ’¢’∏’¨’´ ’π’•’¥’∫’´’∏’∂’∂’•÷Ä’´ ’¨’´’£’°’∂ 2.’à’Ω’Ø’• ’£’∂’§’°’Ø’® 3.‘±’∑’≠’°÷Ä’∞’´ ’£’°’æ’°’©’® 4.’Ä’°’µ’•÷Ä’® ’æ’∏’¨’•’µ’¢’∏’¨’∏÷Ç’¥\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’π’•’¥’∫’´’∏’∂" in question:
        sports.champions_ligue()
    elif "’∏’Ω’Ø’•" in question:
        sports.goldenball()
    elif "’°’∑’≠’°÷Ä’∞" in question:
        sports.valleywc()
    elif "’∞’°’µ" in question:
        sports.armenians_valley()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        valley()

def f1():
    slow_print("’ñ’∏÷Ä’¥’∏÷Ç’¨’° 1-’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’∏’∂’Ω’ø÷Ä’∏÷Ç’Ø’ø’∏÷Ä’∂’•÷Ä’´ ’£’°’æ’°’©’® \n2.‘≤’∏’¨’´’§’® \n3.‘≥÷Ä’°’∂ ’ä÷Ä’´’∂\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’£’°’æ’°’©" in question:
        sports.constructor()
    elif "’¢’∏’¨’´’§" in question:
        sports.bolid()
    elif "’£÷Ä’°’∂" in question:
        sports.grand_prix()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        f1()

def olymp():
    slow_print("’ï’¨’´’¥’∫’´’°’Ø’°’∂ ’≠’°’≤’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘Ω’∏÷Ä’∞÷Ä’§’°’∂’´’∑’∂’•÷Ä \n2.‘æ’°’£’∏÷Ç’¥ \n3.’Ä’°’µ’•÷Ä’∂ ÷Ö’¨’´’¥’∫’´’°’Ø’°’∂ ’≠’°’≤’•÷Ä’∏÷Ç’¥ \n4.’Ü’•÷Ä’°’º’æ’°’Æ ’Ω’∫’∏÷Ä’ø’°’±÷á’•÷Ä\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’≠’∏÷Ä’∞÷Ä" in question:
        sports.olympic_symbol()
    elif "’Æ’°’£" in question:
        sports.origin()
    elif "’∞’°’µ" in question:
        sports.hayer_olymp()
    elif "’Ω’∫’∏÷Ä’ø’°’±" in question:
        sports.olympic_sports()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        olymp()


#hayoc lezu
def jam():
    slow_print("’Ä’°’µ’∏÷Å ’¨’•’¶’æ’´ ’™’°’¥’°’∂’°’Ø’°’±÷á’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘±’∂’Ø’°’ø’°÷Ä ’∂’•÷Ä’Ø’°’∂ \n2.‘±’∂÷Å’µ’°’¨ ’°’∂’Ø’°’ø’°÷Ä’® \n3.’é’°’≤’°’Ø’°’ø’°÷Ä ’∂’•÷Ä’Ø’°’∂ \n4.‘±’∂÷Å’µ’°’¨ ’æ’°’≤’°’Ø’°’ø’°÷Ä’® \n5.‘±’∂÷Å’µ’°’¨ ’°’∫’°’Ø’°’ø’°÷Ä’® \n6.‘±’∂÷Å’µ’°’¨ ’Ø’°’ø’°÷Ä’µ’°’¨’® \n7.’ç’°’∞’¥’°’∂’°’Ø’°’∂ ’°’∫’°’º’∂’´’∂\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’°’∂’Ø’°’ø" in question and "’∂’•÷Ä’Ø" in question:
        armenian_language.ankatar_nerka()
    elif "’°’∂’Ø’°’ø" in question and "’°’∂÷Å" in question:
        armenian_language.ankatar_ancyal()
    elif "’æ’°’≤" in question and "’∂’•÷Ä" in question:
        armenian_language.vaxakatar_nerka()
    elif "’æ’°’≤" in question and "’°’∂÷Å" in question:
        armenian_language.vaxakatar_ancyal()
    elif "’°’∫’°" in question and "’°’∂÷Å" in question:
        armenian_language.apakatar_ancyal()
    elif "’Ø’°’ø’°÷Ä’µ’°’¨" in question and "’°’∂÷Å" in question:
        armenian_language.kataryal_ancyal()
    elif "’°’∫’°’º’∂’´" in question:
        armenian_language.sahmanakan_aparni()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        jam()

def exanak():
    slow_print("‘µ’≤’°’∂’°’Ø’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’ç’°’∞’¥’°’∂’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n2.‘∏’≤’±’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n3.‘µ’∂’©’°’§÷Ä’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n4.’Ä’°÷Ä’Ø’°’§÷Ä’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n5.’Ä÷Ä’°’¥’°’µ’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ω’°’∞’¥’°’∂" in question:
        armenian_language.sahmanakan()
    elif "’®’≤’±’°" in question:
        armenian_language.yxdzakan()
    elif "’•’∂’©’°" in question:
        armenian_language.entadrakan()
    elif "’∞’°÷Ä’Ø’°" in question:
        armenian_language.harkadrakan()
    elif "’∞÷Ä’°" in question:
        armenian_language.hramayakan()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        exanak()

def xosq():
    slow_print("‘Ω’∏’Ω÷Ñ’´ ’¥’°’Ω’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘≥’∏’µ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n2.‘π’æ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n3.‘±’Æ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n4.‘¥’•÷Ä’°’∂’∏÷Ç’∂’® \n5.‘≤’°’µ’® \n6.’Ñ’°’Ø’¢’°’µ’® \n7.‘ø’°’∫’® \n8.’á’°’≤’Ø’°’∫’® \n9.’é’•÷Ä’°’¢’•÷Ä’°’Ø’°’∂’® \n10.’Å’°’µ’∂’°÷Ä’Ø’∏÷Ç’©’µ’∏÷Ç’∂’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’£’∏’µ’°" in question:
        armenian_language.goyakan()
    elif "’©’æ’°" in question:
        armenian_language.tvakan()
    elif "’°’Æ’°’Ø" in question:
        armenian_language.acakan()
    elif "’§’•÷Ä’°’∂" in question:
        armenian_language.deranun()
    elif "’¢’°’µ" in question and "’¥’°’Ø" not in question:
        armenian_language.bay()
    elif "’¥’°’Ø’¢’°’µ" in question:
        armenian_language.makbay()
    elif "’Ø’°’∫" in question and "’∑’°’≤" not in question:
        armenian_language.kap()
    elif "’∑’°’≤’Ø’°’∫" in question:
        armenian_language.shaxkap()
    elif "’æ’•÷Ä’°’¢’•÷Ä" in question:
        armenian_language.veraberakan()
    elif "’±’°’µ’∂’°÷Ä" in question:
        armenian_language.dzajnarkutyun()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        xosq()

def lezvi_patm():
    slow_print("’Ä’°’µ’∏÷Å ’¨’•’¶’æ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘≥÷Ä’°’¢’°÷Ä \n2.’Ñ’´’ª’´’∂ ’∞’°’µ’•÷Ä’•’∂ \n3.‘±’∑’≠’°÷Ä’∞’°’¢’°÷Ä\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’£÷Ä’°" in question:
        armenian_language.grabar()
    elif "’¥’´’ª’´’∂" in question:
        armenian_language.mijin_hayeren()
    elif "’°’∑’≠’°÷Ä’∞" in question:
        armenian_language.ashxarhabar()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        lezvi_patm()


#grak
def tum():
    slow_print("’Ä’∏’æ’∞’°’∂’∂’•’Ω ‘π’∏÷Ç’¥’°’∂’µ’°’∂’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’µ’°’∂÷Ñ’® \n2.’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.¬´‘±’¥’•’∂’°’µ’∂ ’Ä’°’µ’∏÷Å ‘≤’°’∂’°’Ω’ø’•’≤’Æ¬ª ’°’∂’æ’°’∂ ’Ω’ø’°÷Å’∏÷Ç’¥’® \n4.’Ü÷Ä’° ’§’•÷Ä’® ’£÷Ä’°’Ø’°’∂’∏÷Ç’©’µ’°’∂ ’¥’•’ª \n5.‘π’°÷Ä’£’¥’°’∂’π’°’Ø’°’∂ ’£’∏÷Ä’Æ’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’µ’°’∂" in question:
        literature.tum_life()
    elif "’Ω’ø’•’≤’Æ" in question:
        literature.tum_creation()
    elif "’°’¥’•’∂’°’µ’∂" in question:
        literature.amenayn_hayoc_ban()
    elif "’§’•÷Ä" in question:
        literature.tum_role()
    elif "’©’°÷Ä’£" in question:
        literature.tum_translations()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        tum()

def abov():
    slow_print("‘Ω’°’π’°’ø’∏÷Ç÷Ä ‘±’¢’∏’æ’µ’°’∂’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’µ’°’∂÷Ñ’® \n2.’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.’Ü÷Ä’° ’§’•÷Ä’® ’£÷Ä’°’Ø’°’∂’∏÷Ç’©’µ’°’∂ ’¥’•’ª \n4.‘±’∂’∞’•’ø’°÷Å’¥’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’æ’°÷Ä’Ø’°’Æ’∂’•÷Ä’® \n5.¬´’é’•÷Ä÷Ñ ’Ä’°’µ’°’Ω’ø’°’∂’´¬ª ’∫’°’ø’¥’°’æ’•’∫’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’µ’°’∂" in question:
        literature.abov_life()
    elif "’Ω’ø’•’≤" in question:
        literature.abov_creation()
    elif "’§’•÷Ä" in question:
        literature.abov_role()
    elif "’°’∂’∞’•’ø" in question:
        literature.abov_disappearance()
    elif "’æ’•÷Ä÷Ñ" in question:
        literature.verq_hay()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        abov()

def mash():
    slow_print("’Ñ’•’Ω÷Ä’∏’∫ ’Ñ’°’∑’ø’∏÷Å’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’µ’°’∂÷Ñ’® \n2.’Ä’°’µ ’£÷Ä’•÷Ä’´ ’£’µ’∏÷Ç’ø’® \n3.’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n4.‘±’µ’¨ ’°’¶’£’•÷Ä’´ ’£÷Ä’•÷Ä’´ ’£’µ’∏÷Ç’ø’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’µ’°’∂" in question:
        literature.mash_life()
    elif "’∞’°’µ" in question:
        literature.invention_of_writing()
    elif "’Ω’ø’•’≤" in question:
        literature.mash_creation()
    elif "’°’µ’¨" in question:
        literature.other_nations()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        mash()

def nar():
    slow_print("‘≥÷Ä’´’£’∏÷Ä ’Ü’°÷Ä’•’Ø’°÷Å’∏÷Ç ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’µ’°’∂÷Ñ’® \n2.’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.¬´’Ñ’°’ø’µ’°’∂ ’∏’≤’¢’•÷Ä’£’∏÷Ç’©’µ’°’∂¬ª ’Ø’°’¥ ¬´’Ü’°÷Ä’•’Ø¬ª ’£’´÷Ä÷Ñ’® \n4.’Ä’∏’£÷á’∏÷Ä ’Ø’µ’°’∂÷Ñ’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’µ’°" in question and "’∞’∏’£" not in question:
        literature.nar_life()
    elif "’Ω’ø’•’≤" in question:
        literature.nar_creation()
    elif "’∂’°÷Ä’•’Ø" in question and "’¥’°’ø’µ’°’∂" in question:
        literature.narek()
    elif "’∞’∏’£" in question:
        literature.nar_spiritual_life()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        nar()

def sn():
    slow_print("’ç’°’µ’°’© ’Ü’∏’æ’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’µ’°’∂÷Ñ’® \n2.’ç’ø’•’≤’Æ’°’£’∏÷Ä’Æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.’Ü÷Ä’° ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’æ’•’≥’•÷Ä’® \n4.‘Ω’°’≤’•÷Ä’®\n")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’Ø’µ’°’∂" in question:
        literature.sn_life()
    elif "’Ω’ø’•’≤" in question:
        literature.sn_creation()
    elif "’æ’•’≥" in question:
        literature.sn_debate()
    elif "’≠’°’≤" in question:
        literature.sn_xaxer()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        sn()


#divanagitutyun
def first_world():
    slow_print("""‘±’º’°’ª’´’∂ ’°’∑’≠’°÷Ä’∞’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.‘¥’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂
    2.‘µ÷Ä’Ø÷Ä’∂’•÷Ä
    3.‘±’¨’´’°’∂’Ω’∂’•÷Ä ÷á ’¥’´’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
    4.‘±’º’°’ª’°÷Å’∏÷Ç’¥\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’§’´’æ’°’∂" in question:
        diplomacy.diplomacy1()
    elif "’•÷Ä’Ø" in question:
        diplomacy.countries1()
    elif "’¥’´’∏÷Ç" in question:
        diplomacy.union1()
    elif "’°’º’°’ª" in question or "’Ω’ø’•’≤" in question:
        diplomacy.creation1()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        first_world()

def second_world():
    slow_print("""‘µ÷Ä’Ø÷Ä’∏÷Ä’§ ’°’∑’≠’°÷Ä’∞’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.‘¥’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂
    2.‘µ÷Ä’Ø÷Ä’∂’•÷Ä
    3.‘±’¨’´’°’∂’Ω’∂’•÷Ä ÷á ’¥’´’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
    4.‘±’º’°’ª’°÷Å’∏÷Ç’¥\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’§’´’æ’°’∂" in question:
        diplomacy.diplomacy2()
    elif "’•÷Ä’Ø" in question:
        diplomacy.countries2()
    elif "’¥’´’∏÷Ç" in question:
        diplomacy.union2()
    elif "’°’º’°’ª" in question or "’Ω’ø’•’≤" in question:
        diplomacy.creation2()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        second_world()

def third_world():
    slow_print("""‘µ÷Ä÷Ä’∏÷Ä’§ ’°’∑’≠’°÷Ä’∞’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.‘¥’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂
    2.‘µ÷Ä’Ø÷Ä’∂’•÷Ä
    3.‘±’¨’´’°’∂’Ω’∂’•÷Ä ÷á ’¥’´’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
    4.‘±’º’°’ª’°÷Å’∏÷Ç’¥\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’§’´’æ’°’∂" in question:
        diplomacy.diplomacy3()
    elif "’•÷Ä’Ø" in question:
        diplomacy.countries3()
    elif "’¥’´’∏÷Ç" in question:
        diplomacy.union3()
    elif "’°’º’°’ª" in question or "’Ω’ø’•’≤" in question:
        diplomacy.creation3()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        third_world()

#ashxarh
def leading_countries():
    slow_print("""‘±’º’°’ª’°’ø’°÷Ä ’•÷Ä’Ø÷Ä’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.’è’∂’ø’•’Ω’∏÷Ç’©’µ’∏÷Ç’∂
    2.‘±÷Ä’ø’°’§÷Ä’∏÷Ç’©’µ’∏÷Ç’∂
    3.‘≤’∂’°’Ø’π’∏÷Ç’©’µ’∏÷Ç’∂
    4.’Ä’°’∂÷Ñ’°’∞’°’∂’∏÷Ç’¥
    5.’å’°’¶’¥’°’Ø’°’∂ ’∏÷Ç’™\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’ø’∂’ø’•’Ω" in question:
        geography.economy()
    elif "’°÷Ä’ø’°’§" in question:
        geography.manufacture()
    elif "’¢’∂’°’Ø" in question:
        geography.population()
    elif "’∞’°’∂÷Ñ’°" in question:
        geography.mining()
    elif "’∏÷Ç’™" in question:
        geography.military()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        leading_countries()

def continents():
    slow_print("""‘±’∑’≠’°÷Ä’∞’°’¥’°’Ω’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.‘µ’æ÷Ä’∏’∫’°
    2.‘±’Ω’´’°
    3.‘±÷Ü÷Ä’´’Ø’°
    4.’ï’æ’Ø’´’°’∂’´’°
    5.‘±’¥’•÷Ä’´’Ø’°
    6.‘±’∂’ø’°÷Ä’Ø’ø’´’§’°\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’•’æ÷Ä’∏’∫’°" in question:
        geography.europe()
    elif "’°’Ω’´’°" in question:
        geography.asia()
    elif "’°÷Ü÷Ä’´’Ø’°" in question:
        geography.africa()
    elif "÷Ö’æ’Ø’´’°’∂’´’°" in question:
        geography.oceania()
    elif "’°’¥’•÷Ä’´’Ø’°" in question:
        geography.america()
    elif "’°’∂’ø’°÷Ä’Ø’ø’´’§’°" in question:
        geography.antarctida()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        continents()

def race():
    slow_print("""’Ñ’°÷Ä’§’Ø’°’µ’´’∂ ’º’°’Ω’°’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.’Ü’•’£÷Ä’∏’´’§
    2.‘µ’æ÷Ä’∏’∫’∏’´’§
    3.’Ñ’∏’∂’≤’∏’¨’∏’´’§
    4.‘±’æ’Ω’ø÷Ä’°’¨’∏’´’§\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’∂’•’£÷Ä" in question:
        geography.negroid()
    elif "’•’æ÷Ä’∏" in question:
        geography.europoid()
    elif "’¥’∏’∂’≤" in question:
        geography.mongoloid()
    elif "’°’æ’Ω’ø" in question:
        geography.ausraloid()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        race()

def water():
    slow_print("""’ã÷Ä’°’µ’´’∂ ’°’∑’≠’°÷Ä’∞’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.‘º’≥’•÷Ä
    2.‘æ’∏’æ’•÷Ä
    3.’ï’æ’Ø’´’°’∂’∏’Ω’∂’•÷Ä
    4.‘≥’•’ø’•÷Ä
    5.’ã÷Ä’æ’•’™’∂’•÷Ä
    6.‘æ’∏÷Å’•÷Ä
    7.’ã÷Ä’°’∂÷Å÷Ñ’∂’•÷Ä\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "’≥" in question:
        geography.lake()
    elif "’Æ’∏’æ" in question:
        geography.sea()
    elif "÷Ö’æ’Ø" in question:
        geography.ocean()
    elif "’£’•’ø" in question:
        geography.river()
    elif "’ª÷Ä’æ’•’™" in question:
        geography.waterfall()
    elif "’Æ’∏÷Å" in question:
        geography.bay()
    elif "’ª÷Ä’°’∂÷Å÷Ñ" in question:
        geography.canal()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        water()

def religion():
    slow_print("""‘ø÷Ä’∏’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù
    1.’î÷Ä’´’Ω’ø’∏’∂’•’∏÷Ç’©’µ’∏÷Ç’∂
    2.‘ª’Ω’¨’°’¥ ’Ø’°’¥ ’Ñ’°’∞’¥’•’§’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂
    3.’Ä’´’∂’§’∏÷Ç’´’¶’¥
    4.‘≤’∏÷Ç’§’§’´’¶’¥
    5.’Ä’∏÷Ç’§’°’µ’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂\n""")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ’ù ")
    question = question.lower()
    if "÷Ñ÷Ä’´’Ω’ø" in question:
        geography.christ()
    elif "’´’Ω’¨’°’¥" in question or "’¥’°’∞’¥’•" in question:
        geography.islam()
    elif "’∞’´’∂’§’∏÷Ç" in question:
        geography.huda()
    elif "’¢’∏÷Ç’§" in question:
        geography.budda()
    elif "’∞’∏÷Ç’§’°" in question:
        geography.israel()
    else:
        slow_print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:\n")
        religion()
