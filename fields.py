import python
import mathematics
import history
import physics
import literature
import sports
import armenian_language
import english
#python
def array():
    print("‘∂’°’∂’£’æ’°’Æ’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’¶’°’∂’£’æ’°’Æ’® \n2.‘ª’û’∂’π ’ß list \n3.‘ª’û’∂’π ’ß set \n4.‘ª’û’∂’π ’ß tuple \n5.‘ª’û’∂’π ’ß dict")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’¶’°’∂’£’æ’°’Æ" in question:
        python.array1()
    elif "list" in question or "’¨’´’Ω’ø" in question:
        python.list1()
    elif "set" in question or "’Ω’•’©" in question:
        python.set1()
    elif "tuple" in question or "’©’°’∫’¨" in question:
        python.tuple1()
    elif "dict" in question or "dictionary" in question or "’§’´÷Ñ’ø" in question or "’§’´÷Ñ’∑’∂’º’´" in question:
        python.dict1()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        array()
def condition():
    print("’ä’°’µ’¥’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’∫’°’µ’¥’°’∂’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’∫’°’µ’¥’°’∂’´ ÷Ö’∫’•÷Ä’°’ø’∏÷Ä’∂’•÷Ä’® \n3.‘ª’û’∂’π ’•’∂ if,elif ÷á else")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’∫’°’µ’¥’°’∂" in question:
        python.condition()
    elif "÷Ö’∫’•÷Ä’°’ø’∏÷Ä" in question:
        python.coditional_operator()
    elif "if" in question or "elif" in question or "else" in question:
        python.if_elif_else()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        condition()

def cycle():
    print("’ë’´’Ø’¨’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ÷Å’´’Ø’¨’® \n2.‘ª’û’∂’π ’ß for \n3.‘ª’û’∂’π ’ß while \n4.‘ª’û’∂’π ’ß foreach")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "÷Å’´’Ø’¨" in question:
        python.cycle()
    elif ("for" in question or "÷Ü’∏’º" in question) and "each" not in question:
        python.for1()
    elif "while" in question or "’æ’°’µ’¨" in question:
        python.while1()
    elif "foreach" in question or "÷Ü’∏’º’´’π" in question:
        python.foreach1()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        cycle()

def math():
    print("math ’¥’∏’§’∏÷Ç’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß math ’¥’∏’§’∏÷Ç’¨’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ math ’¥’∏’§’∏÷Ç’¨’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if ("math" in question or "’¥’°’©" in question) and "÷Ü" not in question:
        python.math1()
    elif ("math" in question or "’¥’°’©" in question) and "÷Ü" in question:
        python.math_func()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        math()

def strg():
    print("’è’∏’≤’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’ø’∏’≤’® \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’ø’∏’≤’•÷Ä’´ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä’® ÷á ’¥’•’©’∏’§’∂’•÷Ä’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’ø’∏’≤" in question and "÷Ü" not in question:
        python.strg1()
    elif "’ø’∏’≤" in question and "÷Ü" in question:
        python.method_func()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        strg()

#mathem
def flat():
    print("’Ä’°÷Ä’©’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’Ω’•’≤’°’∂’® \n2.‘ª’û’∂’π ’ß ’•’º’°’∂’Ø’µ’∏÷Ç’∂’® \n3.‘ª’û’∂’π ’ß ’¶’∏÷Ç’£’°’∞’•’º’°’£’´’Æ’® \n4.‘ª’û’∂’π ’ß ’∑’•’≤’°’∂’Ø’µ’∏÷Ç’∂’® \n5.‘ª’û’∂’π ’ß ’∏÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’•’≤’°’∂" in question:
        mathematics.trapezoid()
    elif "’•’º’°’∂" in question:
        mathematics.triangle()
    elif "’¶’∏÷Ç’£’°’∞’•’º" in question:
        mathematics.parallelogram()
    elif "’∑’•’≤’°’∂" in question:
        mathematics.rhombus()
    elif "’∏÷Ç’≤’≤’°’∂" in question:
        mathematics.rectangle()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        flat()

def solid():
    print("’è’°÷Ä’°’Æ’°’π’°÷É’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’¢’∏÷Ç÷Ä’£’® \n2.‘ª’û’∂’π ’ß ’£’∏÷Ç’∂’§’® \n3.‘ª’û’∂’π ’ß ’£’¨’°’∂’® \n4.‘ª’û’∂’π ’ß ’Ø’∏’∂’® \n5.‘ª’û’∂’π ’ß ’∏÷Ç’≤’≤’°’∂’Ø’µ’∏÷Ç’∂’°’∂’´’Ω’ø’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’¢’∏÷Ç÷Ä’£" in question:
        mathematics.pyramid()
    elif "’£’∏÷Ç’∂’§" in question or "’£’∂’§" in question:
        mathematics.ball()
    elif "’£’¨’°’∂" in question:
        mathematics.cylinder()
    elif "’Ø’∏’∂" in question:
        mathematics.cone()
    elif "’∏÷Ç’≤’≤" in question:
        mathematics.rectangular()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        solid()


def trigon():
    print("’è÷Ä’´’£’∏’∂’∏’¥’•’ø÷Ä’´’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù 1.‘ª’û’∂’π ’ß ’Ø’∏’Ω’´’∂’∏÷Ç’Ω’® 2.‘ª’û’∂’π ’ß ’Ω’´’∂’∏÷Ç’Ω’® 3.‘ª’û’∂’π ’ß ’ø’°’∂’£’•’Ω’® 4.‘ª’û’∂’π ’ß ’Ø’∏’ø’°’∂’£’•’Ω’® 5.‘ª’û’∂’π ’•’∂ ’°÷Ä’Ø’•÷Ä’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ø’∏’Ω" in question:
        mathematics.cos()
    elif "’Ω’´’∂" in question:
        mathematics.sin()
    elif "’ø’°’∂" in question and "’Ø’∏" not in question:
        mathematics.tg()
    elif "’Ø’∏’ø" in question:
        mathematics.ctg()
    elif "’°÷Ä’Ø" in question or "’°’º’Ø" in question:
        mathematics.arc()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        trigon()


def algebra():
    print("’Ä’°’∂÷Ä’°’∞’°’∑’æ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ø’•’Ω’°’Ø’´ ’©’æ’•÷Ä ’Ø’°’∂ \n2.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’©’æ’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® \n3.‘ª’û’∂’π ’ß ’Ø’∏’ø’∏÷Ä’°’Ø’® \n4.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’Ø÷Ä’≥’°’ø ’¢’°’¶’¥’°’∫’°’ø’Ø’¥’°’∂ ’¢’°’∂’°’±÷á’•÷Ä’® \n5.‘ª’û’∂’π ’ß ÷Ñ’°’º’°’Ø’∏÷Ç’Ω’°’µ’´’∂ ’∞’°’æ’°’Ω’°÷Ä’∏÷Ç’¥’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’ø’•’Ω’°’Ø" in question:
        mathematics.types_of_numbers()
    elif "’£’∏÷Ä’Æ’∏’≤" in question:
        mathematics.operations()
    elif "’Ø’∏’ø’∏÷Ä" in question:
        mathematics.fraction()
    elif "’Ø÷Ä’≥’°’ø" in question:
        mathematics.multi_formulas()
    elif "÷Ñ’°’º’°" in question:
        mathematics.quadratic()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        algebra()


def theorem():
    print("’Ñ’°’©’•’¥’°’ø’´’Ø’°’Ø’°’∂ ’©’•’∏÷Ä’•’¥’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß ’ä’µ’∏÷Ç’©’°’£’∏÷Ä’°’Ω’´ ’©’•’∏÷Ä’•’¥’® \n2.’à’û÷Ä’∂ ’ß ‘π’°’¨’•’Ω’´ ’©’•’∏÷Ä’•’¥’® \n3.’à’û÷Ä’∂ ’ß ‘≤’•’¶’∏÷Ç’´ ’©’•’∏÷Ä’•’¥’® \n4.’à’û÷Ä’∂ ’ß ’ç’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’® \n5.’à’û÷Ä’∂ ’ß ‘ø’∏’Ω’´’∂’∏÷Ç’Ω’∂’•÷Ä’´ ’©’•’∏÷Ä’•’¥’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’∫’µ’∏÷Ç" in question:
        mathematics.pyut()
    elif "’©’°’¨" in question:
        mathematics.tales()
    elif "’¢’•’¶" in question:
        mathematics.bezu()
    elif "’Ω’´’∂" in question and "’Ø’∏" not in question:
        mathematics.sin_teo()
    elif "’Ø’∏’Ω’´’∂" in question:
        mathematics.cos_teo()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        theorem()

#patm
def artashesyan():
    print("‘±÷Ä’ø’°’∑’•’Ω’µ’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.‘±÷Ä’ø’°’∑’•’Ω’µ’°’∂’∂’•÷Ä’´ ’§’´÷Å’°÷Ä’°’∂’® \n5.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’°’∞’¥’°’∂’∂’•÷Ä’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.art_creation()
    elif "’æ’•÷Ä" in question:
        history.art_rise()
    elif "’°’∂’Ø" in question:
        history.art_collapse()
    elif "’§’´÷Å’°" in question:
        history.art_cathedral()
    elif "’Ω’°’∞" in question:
        history.art_area()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        artashesyan()

def arshakuni():
    print("‘±÷Ä’∑’°’Ø’∏÷Ç’∂’´’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.¬´‘±÷Ä’∑’°’Ø ÷á ’á’°’∫’∏÷Ç’∞¬ª ’°’æ’°’∂’§’°’¶÷Ä’∏÷Ç’µ÷Å’® \n5.’î÷Ä’´’Ω’ø’∏’∂’•’∏÷Ç’©’µ’°’∂ ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.arsh_creation()
    elif "’æ’•÷Ä" in question:
        history.arsh_rise()
    elif "’°’∂’Ø" in question:
        history.arsh_collapse()
    elif "’∑’°’∫’∏÷Ç’∞" in question:
        history.arsh_shapuh()
    elif "÷Ñ÷Ä’´’Ω" in question:
        history.christianity()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        arshakuni()

def bagratuni():
    print("‘≤’°’£÷Ä’°’ø’∏÷Ç’∂’´’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥’® \n4.’ç÷á’´ ’≥’°’Ø’°’ø’°’¥’°÷Ä’ø’® \n5.’Ñ’°’∂’°’¶’Ø’•÷Ä’ø’´ ’≥’°’Ø’°’ø’°’¥’°÷Ä’ø’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.bagr_creation()
    elif "’æ’•÷Ä" in question:
        history.bagr_rise()
    elif "’°’∂’Ø" in question:
        history.bagr_collapse()
    elif "’Ω÷á’°’∂" in question:
        history.sevan()
    elif "’¥’°’∂’°’¶" in question:
        history.manazkert()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        bagratuni()

def rubinyan():
    print("’å’∏÷Ç’¢’´’∂’µ’°’∂’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ø’´’¨’´’Ø’´’°’µ’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘ø’´’¨’´’Ø’´’°’µ’´ ’æ’•÷Ä’•’¨÷Ñ’® \n3.‘ø’´’¨’´’Ø’´’°’µ’´ ’°’∂’Ø’∏÷Ç’¥’® \n4.‘π’°’£’°’æ’∏÷Ä’∏÷Ç’©’µ’°’∂ ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥ \n5.‘±’Ø’ø’´’æ ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.rub_creation()
    elif "’æ’•÷Ä" in question:
        history.rub_rise()
    elif "’°’∂’Ø" in question:
        history.rub_collapse()
    elif "’©’°’£" in question:
        history.rub_kingdom()
    elif "’§’´’æ’°" in question:
        history.rub_diplomacy()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        rubinyan()

def first():
    print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘±’º’°’ª’´’∂ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ñ’°’µ’´’Ω’µ’°’∂ ’∞’•÷Ä’∏’Ω’°’¥’°÷Ä’ø’•÷Ä’® \n2.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n3.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’°’∂’Ø’∏÷Ç’¥ \n4.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’≠’∏÷Ä’∞÷Ä’§’°’µ’∂’°÷Å’¥’°’∂ ’Ω’Ø’´’¶’¢’® \n5.’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’¥’°’µ’´’Ω" in question:
        history.mayis()
    elif "’Ω’ø’•’≤" in question:
        history.creation1()
    elif "’°’∂’Ø" in question:
        history.collapse1()
    elif "’≠’∏" in question:
        history.communism()
    elif "’§’´’æ’°’∂" in question:
        history.diplomacy1()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        first()

def second():
    print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘Ω’∏÷Ä’∞÷Ä’§’°’µ’´’∂ ’ç’∏÷Å’´’°’¨’´’Ω’ø’°’Ø’°’∂ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ä‘Ω’ç’Ä-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.’Ä‘Ω’ç’Ä-’´ ’°’∂’Ø’∏÷Ç’¥’® \n3.’Ä’°’µ’•÷Ä’´ ’¥’°’Ω’∂’°’Ø÷Å’∏÷Ç’©’µ’∏÷Ç’∂’® ’Ä’°’µ÷Ä’•’∂’°’Ø’°’∂ ’∫’°’ø’•÷Ä’°’¶’¥’∏÷Ç’¥ \n4.’Ä‘Ω’ç’Ä-’´ ’£’´’ø’°’Ø’°’∂ ’°’º’°’ª’®’∂’©’°÷Å’® \n5.’ç’∏÷Ç’¥’£’°’µ’´’©’µ’°’∂ ’∏’≤’¢’•÷Ä’£’∏÷Ç’©’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.creation2()
    elif "’°’∂’Ø" in question:
        history.collapse2()
    elif "’∞’°’µ÷Ä’•’∂’°’Ø’°’∂" in question:
        history.patriotic()
    elif "’£’´’ø’°" in question:
        history.scientific()
    elif "’Ω’∏÷Ç’¥’£’°" in question:
        history.sumgayit()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        second()

def third():
    print("’Ä’°’µ’°’Ω’ø’°’∂’´ ‘µ÷Ä÷Ä’∏÷Ä’§ ’Ä’°’∂÷Ä’°’∫’•’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’Ä’Ä-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥’® \n2.‘±÷Ä÷Å’°’≠’µ’°’∂ ’°’º’°’ª’´’∂ ’∫’°’ø’•÷Ä’°’¶’¥’® \n3.‘±÷Ä÷Å’°’≠’µ’°’∂ ’•÷Ä’Ø÷Ä’∏÷Ä’§ ’∫’°’ø’•÷Ä’°’¶’¥’® \n4.‘π’°’æ’∑’µ’° ’∞’•’≤’°÷É’∏’≠’∏÷Ç’©’µ’∏÷Ç’∂’® \n5.’Ä’Ä-’´ ’∂’•÷Ä’Ø’°’µ’´’Ω ’§’´’æ’°’∂’°’£’´’ø’∏÷Ç’©’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’ø’•’≤" in question:
        history.creation3()
    elif "’°’º’°’ª’´’∂" in question:
        history.arcax1()
    elif "’•÷Ä’Ø÷Ä’∏÷Ä’§" in question:
        history.arcax2()
    elif "’©’°’æ" in question:
        history.tavshya()
    elif "’§’´’æ’°’∂" in question:
        history.diplomacy3()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        third()

#fizika
def astro():
    print("‘±’Ω’ø’≤’°’£’´’ø’∏÷Ç’©’µ’°’∂ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘±÷Ä’•’£’°’Ø’∂’°’µ’´’∂ ’∞’°’¥’°’Ø’°÷Ä’£’® \n2.‘æ’´÷Ä ‘ø’°’©’´’∂ ’£’°’¨’°’Ø’ø’´’Ø’°’∂ \n3.‘ª’∂’π’∏’û÷Ç ’•’∂ ‘æ’´÷Ä ‘ø’°’©’´’∂’´’∂ ’°’µ’¨ ’Ø’•÷Ä’∫ ’°’∂’æ’°’∂’∏÷Ç’¥ ’Ä’°÷Ä’§’°’£’∏’≤’´ ’É’°’∂’°’∫’°÷Ä’∞ \n4.‘ª’û’∂’π ’ß ’°’Ω’ø’≤’® \n5.‘ª’û’∂’π ’ß ’∞’•’º’°’§’´’ø’°’Ø’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’°÷Ä’•’£’°’Ø" in question:
        physics.solar_system()
    elif "’Æ’´÷Ä" in question and "’∞’°÷Ä’§’°’£’∏’≤" not in question:
        physics.milky_way()
    elif "’∞’°÷Ä’§’°’£’∏’≤" in question:
        physics.hardagoxi()
    elif "’°’Ω’ø’≤" in question:
        physics.star()
    elif "’∞’•’º’°’§’´’ø" in question:
        physics.telescope()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        astro()

def physic():
    print("’ñ’´’¶’´’Ø’°’µ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’∏÷Ç’™’® \n2.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’°’º’°’ª’´’∂ ÷Ö÷Ä’•’∂÷Ñ \n3.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’•÷Ä’Ø÷Ä’∏÷Ä’§ ÷Ö÷Ä’•’∂÷Ñ \n4.’Ü’µ’∏÷Ç’ø’∏’∂’´ ’•÷Ä÷Ä’∏÷Ä’§ ÷Ö÷Ä’•’∂÷Ñ \n5.‘ª’û’∂’π ’ß ’°’∑’≠’°’ø’°’∂÷Ñ’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’∏÷Ç’™" in question:
        physics.force()
    elif "’°’º’°’ª’´’∂" in question or "1-’´’∂" in question or "1’´’∂" in question:
        physics.nyut1()
    elif "’•÷Ä’Ø÷Ä’∏÷Ä’§" in question or "2-÷Ä’§" in question or "2÷Ä’§" in question:
        physics.nyut2()
    elif "’•÷Ä÷Ä’∏÷Ä’§" in question or "3-÷Ä’§" in question or "3÷Ä’§" in question:
        physics.nyut3()
    elif "’°’∑’≠’°’ø’°’∂" in question:
        physics.work()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        physic()

#angl
def present():
    print("’Ü’•÷Ä’Ø’° ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß Present Simple \n2.’à’û÷Ä’∂ ’ß Present Continuous \n3.’à’û÷Ä’∂ ’ß Present Perfect \n4.’à’û÷Ä’∂ ’ß Present Perfect Continuous")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "simple" in question:
        english.ps()
    elif "conti" in question and "perfect" not in question:
        english.pc()
    elif "perfect" in question and "conti" not in question:
        english.pp()
    elif "perfect" in question and "conti" in question:
        english.ppc()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        present()

def past():
    print("‘±’∂÷Å’µ’°’¨ ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß Past Simple \n2.’à’û÷Ä’∂ ’ß Past Continuous \n3.’à’û÷Ä’∂ ’ß Past Perfect \n4.’à’û÷Ä’∂ ’ß Past Perfect Continuous")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "simple" in question:
        english.pas()
    elif "conti" in question and "perfect" not in question:
        english.pac()
    elif "perfect" in question and "conti" not in question:
        english.pap()
    elif "perfect" in question and "conti" in question:
        english.papc()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        past()

def future():
    print("‘±’∫’°’º’∂’´ ’™’°’¥’°’∂’°’Ø’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß Future Simple \n2.’à’û÷Ä’∂ ’ß Future Continuous \n3.’à’û÷Ä’∂ ’ß Future Perfect \n4.’à’û÷Ä’∂ ’ß Future Perfect Continuous")
    harc = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    harc.lower()
    if "simple" in harc:
        english.fs()
    elif "conti" in harc and "perfect" not in harc:
        english.fc()
    elif "perfect" in harc and "conti" not in harc:
        english.fp()
    elif "perfect" in harc and "conti" in harc:
        english.fpc()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        future()

#sport
def foot():
    print("’ñ’∏÷Ç’ø’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’à’Ω’Ø’• ’£’∂’§’°’Ø’® \n2.‘ª’û’∂’π ’ß ’ñ‘ª’ñ‘±-’∂ \n3.‘ª’û’∂’π ’ß ’à’í‘µ’ñ‘±-’∂ \n4.‘ª’û’∂’π ’ß ’à’Ω’Ø’• ’≠’°’≤’°’Ø’∏’∑’´’Ø’® \n5.’Ä’°’µ’•÷Ä’® ÷Ü’∏÷Ç’ø’¢’∏’¨’∏÷Ç’¥")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’£’∂’§’°’Ø" in question:
        sports.ballondor()
    elif "÷Ü’´÷Ü’°" in question:
        sports.fifa()
    elif "’∏÷Ç’•÷Ü’°" in question:
        sports.uefa()
    elif "’Ø’∏’∑’´’Ø" in question:
        sports.goldenboot()
    elif "’∞’°’µ" in question:
        sports.armenian_foot()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        foot()

def basket():
    print("‘≤’°’Ω’Ø’•’ø’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ’Ü‘≤‘± \n2.’à’û÷Ä’∂ ’ß ’ñ‘ª‘≤‘± ’°’∑’≠’°÷Ä’∞’´ ’£’°’æ’°’©’® \n3.‘ª’û’∂’π ’ß ‘µ’æ÷Ä’∏‘º’´’£’°’∂ \n4.’Ä’°’µ’•÷Ä’® ’¢’°’Ω’Ø’•’ø’¢’∏’¨’∏÷Ç’¥")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’∂’¢’°" in question:
        sports.nba()
    elif "÷Ü’´’¢’°" in question:
        sports.fiba_wc()
    elif "’•’æ÷Ä’∏" in question:
        sports.euroligue()
    elif "’∞’°’µ" in question:
        sports.armenian_basket()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        basket()

def valley():
    print("’é’∏’¨’•’µ’¢’∏’¨’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù 1.‘ª’û’∂’π ’ß ’æ’∏’¨’•’µ’¢’∏’¨’´ ’π’•’¥’∫’´’∏’∂’∂’•÷Ä’´ ’¨’´’£’°’∂ 2.’à’û÷Ä’∂ ’ß ’à’Ω’Ø’• ’£’∂’§’°’Ø’® 3.‘ª’û’∂’π ’ß ’°’∑’≠’°÷Ä’∞’´ ’£’°’æ’°’©’® 4.’Ä’°’µ’•÷Ä’® ’æ’∏’¨’•’µ’¢’∏’¨’∏÷Ç’¥")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’π’•’¥’∫’´’∏’∂" in question:
        sports.champions_ligue()
    elif "’∏’Ω’Ø’•" in question:
        sports.goldenball()
    elif "’°’∑’≠’°÷Ä’∞" in question:
        sports.valleywc()
    elif "’∞’°’µ" in question:
        sports.armenians_valley()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        valley()


def f1():
    print("’ñ’∏÷Ä’¥’∏÷Ç’¨’° 1-’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘ª’û’∂’π ’ß ‘ø’∏’∂’Ω’ø÷Ä’∏÷Ç’Ø’ø’∏÷Ä’∂’•÷Ä’´ ’£’°’æ’°’©’® \n2.‘ª’û’∂’π ’ß ’¢’∏’¨’´’§’® \n3.‘ª’û’∂’π ’ß ‘≥÷Ä’°’∂ ’ä÷Ä’´’∂")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’£’°’æ’°’©" in question:
        sports.constructor()
    elif "’¢’∏’¨’´’§" in question:
        sports.bolid()
    elif "’£÷Ä’°’∂" in question:
        sports.grand_prix()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        f1()

def olymp():
    print("’ï’¨’´’¥’∫’´’°’Ø’°’∂ ’≠’°’≤’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à÷Ä’∏’û’∂÷Ñ ’•’∂ ’≠’∏÷Ä’∞÷Ä’§’°’∂’´’∑’∂’•÷Ä’® ÷á ’´’û’∂’π ’•’∂ ’∂’∑’°’∂’°’Ø’∏÷Ç’¥ \n2.‘ª’∂’π’∫’•’û’Ω ’•’∂ ’Æ’°’£’•’¨ ÷Ö’¨’´’¥’∫’´’°’Ø’°’∂ ’≠’°’≤’•÷Ä’® \n3.’Ä’°’µ’•÷Ä’∂ ÷Ö’¨’´’¥’∫’´’°’Ø’°’∂ ’≠’°’≤’•÷Ä’∏÷Ç’¥ \n4.‘ª’û’∂’π ’Ω’∫’∏÷Ä’ø’°’±÷á’•÷Ä ’•’∂ ’∂’•÷Ä’°’º’æ’°’Æ")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’≠’∏÷Ä’∞÷Ä" in question:
        sports.olympic_symbol()
    elif "’Æ’°’£" in question:
        sports.origin()
    elif "’∞’°’µ" in question:
        sports.hayer_olymp()
    elif "’Ω’∫’∏÷Ä’ø’°’±" in question:
        sports.olympic_sports()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        olymp()

#hayoc lezu
def jam():
    print("’Ä’°’µ’∏÷Å ’¨’•’¶’æ’´ ’™’°’¥’°’∂’°’Ø’°’±÷á’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß ’°’∂’Ø’°’ø’°÷Ä ’∂’•÷Ä’Ø’°’∂ \n2.’à’û÷Ä’∂ ’ß ’°’∂÷Å’µ’°’¨ ’°’∂’Ø’°’ø’°÷Ä’® \n3.’à’û÷Ä’∂ ’ß ’æ’°’≤’°’Ø’°’ø’°÷Ä ’∂’•÷Ä’Ø’°’∂ \n4.’à’û÷Ä’∂ ’ß ’°’∂÷Å’µ’°’¨ ’æ’°’≤’°’Ø’°’ø’°÷Ä’® \n5.’à’û÷Ä’∂ ’ß ’°’∂÷Å’µ’°’¨ ’°’∫’°’Ø’°’ø’°÷Ä’® \n6.’à’û÷Ä’∂ ’ß ’°’∂÷Å’µ’°’¨ ’Ø’°’ø’°÷Ä’µ’°’¨’® \n7.’à’û÷Ä’∂ ’ß ’Ω’°’∞’¥’°’∂’°’Ø’°’∂ ’°’∫’°’º’∂’´’∂")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’°’∂’Ø’°’ø" in question and "’∂’•÷Ä’Ø" in question:
        armenian_language.ankatar_nerka()
    elif "’°’∂’Ø’°’ø" in question and "’°’∂÷Å" in question:
        armenian_language.ankatar_ancyal()
    elif "’æ’°’≤" in question and "’∂’•÷Ä" in question:
        armenian_language.vaxakatar_nerka()
    elif "’æ’°’≤" in question and "’°’∂÷Å" in question:
        armenian_language.vaxakatar_ancyal()
    elif "’°’∫’°" in question and "’°’∂÷Å" in question:
        armenian_language.apakatar_ancyal()
    elif "’Ø’°’ø’°÷Ä’µ’°’¨" in question and "’°’∂÷Å" in question:
        armenian_language.kataryal_ancyal()
    elif "’°’∫’°’º’∂’´" in question:
        armenian_language.sahmanakan_aparni()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        jam()

def exanak():
    print("‘µ’≤’°’∂’°’Ø’∂’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß ’Ω’°’∞’¥’°’∂’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n2.’à’û÷Ä’∂ ’ß ’®’≤’±’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n3.’à’û÷Ä’∂ ’ß ’•’∂’©’°’§÷Ä’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n4.’à’û÷Ä’∂ ’ß ’∞’°÷Ä’Ø’°’§÷Ä’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’® \n5.’à’û÷Ä’∂ ’ß ’∞÷Ä’°’¥’°’µ’°’Ø’°’∂ ’•’≤’°’∂’°’Ø’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’Ω’°’∞’¥’°’∂" in question:
        armenian_language.sahmanakan()
    elif "’®’≤’±’°" in question:
        armenian_language.yxdzakan()
    elif "’•’∂’©’°" in question:
        armenian_language.entadrakan()
    elif "’∞’°÷Ä’Ø’°" in question:
        armenian_language.harkadrakan()
    elif "’∞÷Ä’°" in question:
        armenian_language.hramayakan()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        exanak()

def xosq():
    print("‘Ω’∏’Ω÷Ñ’´ ’¥’°’Ω’•÷Ä’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.’à’û÷Ä’∂ ’ß ’£’∏’µ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n2.’à’û÷Ä’∂ ’ß ’©’æ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n3.’à’û÷Ä’∂ ’ß ’°’Æ’°’Ø’°’∂ ’°’∂’∏÷Ç’∂’® \n4.’à’û÷Ä’∂ ’ß ’§’•÷Ä’°’∂’∏÷Ç’∂’® \n5.’à’û÷Ä’∂ ’ß ’¢’°’µ’® \n6.’à’û÷Ä’∂ ’ß ’¥’°’Ø’¢’°’µ’® \n7.’à’û÷Ä’∂ ’ß ’Ø’°’∫’® \n8.’à’û÷Ä’∂ ’ß ’∑’°’≤’Ø’°’∫’® \n9.’à’û÷Ä’∂ ’ß ’æ’•÷Ä’°’¢’•÷Ä’°’Ø’°’∂’® \n10.’à’û÷Ä’∂ ’ß ’±’°’µ’∂’°÷Ä’Ø’∏÷Ç’©’µ’∏÷Ç’∂’®")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’£’∏’µ’°" in question:
        armenian_language.goyakan()
    elif "’©’æ’°" in question:
        armenian_language.tvakan()
    elif "’°’Æ’°’Ø" in question:
        armenian_language.acakan()
    elif "’§’•÷Ä’°’∂" in question:
        armenian_language.deranun()
    elif "’¢’°’µ" in question and "’¥’°’Ø" not in question:
        armenian_language.bay()
    elif "’¥’°’Ø’¢’°’µ" in question:
        armenian_language.makbay()
    elif "’Ø’°’∫" in question and "’∑’°’≤" not in question:
        armenian_language.kap()
    elif "’∑’°’≤’Ø’°’∫" in question:
        armenian_language.shaxkap()
    elif "’æ’•÷Ä’°’¢’•÷Ä" in question:
        armenian_language.veraberakan()
    elif "’±’°’µ’∂’°÷Ä" in question:
        armenian_language.dzajnarkutyun()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        xosq()

def lezvi_patm():
    print("’Ä’°’µ’∏÷Å ’¨’•’¶’æ’´ ’∞’•’ø ’Ø’°’∫’æ’°’Æ ’∞’°÷Ä÷Å’•÷Ä’∂ ’•’∂’ù \n1.‘≥÷Ä’°’¢’°÷Ä \n2.’Ñ’´’ª’´’∂ ’∞’°’µ’•÷Ä’•’∂ \n3.‘±’∑’≠’°÷Ä’∞’°’¢’°÷Ä")
    question = input("‘≥÷Ä’•÷Ñ, ’©’• ’´’∂’π ’∞’°÷Ä÷Å ’∏÷Ç’∂’•÷Ñ = ")
    question = question.lower()
    if "’£÷Ä’°" in question:
        armenian_language.grabar()
    elif "’¥’´’ª’´’∂" in question:
        armenian_language.mijin_hayeren()
    elif "’°’∑’≠’°÷Ä’∞" in question:
        armenian_language.ashxarhabar()
    else:
        print("‘ø’∂’•÷Ä’•÷Ñüòî: \n’Å’•÷Ä ’∞’°÷Ä÷Å’∂ ’°’∂’∞’°’Ω’Ø’°’∂’°’¨’´ ’ß: \n‘ø’°÷Ä’∏’û’≤ ’•÷Ñ ’°’µ’¨ ’Ø’•÷Ä’∫ ’±÷á’°’Ø’•÷Ä’∫’•’¨ ’∞’°÷Ä÷Å’®:")
        lezvi_patm()

#grak
def tum():

def abov():

def mash():

def nar():

def sn():
